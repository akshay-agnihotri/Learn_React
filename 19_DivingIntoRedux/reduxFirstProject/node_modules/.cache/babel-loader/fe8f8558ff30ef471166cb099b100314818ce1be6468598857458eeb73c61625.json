{"ast":null,"code":"// const redux = require(\"redux\");\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\n// import { createStore } from \"redux\"; //to do this we use to either change our file name to .mjs\n//or we can add type:\"module\" in package.json() like this--\n// {\n//     \"name\": \"redux-app\",\n//     \"version\": \"1.0.0\",\n//     \"main\": \"index.js\",\n//     \"type\": \"module\"\n//   }\n\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state, action) {\n      // return {\n      //   counter: state.counter + action.payload,\n      //   showCounter: state.showCounter,\n      // };\n      state.counter = state.counter + action.payload;\n    },\n    decrement(state, action) {\n      // return {\n      //   counter: state.counter + action.payload,\n      //   showCounter: state.showCounter,\n      // };\n      state.counter = state.counter - action.payload;\n    },\n    toggleCounter(state) {\n      // return {\n      //   counter: state.showCounter,\n      //   showCounter: !state.showCounter,\n      // };\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggleShowCounter\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","action","payload","decrement","toggleCounter","initialAuthState","isAuthenticated","login","store","reducer","counterActions","actions"],"sources":["C:/Users/AKSHAY/OneDrive/Desktop/react_folder/react/19_DivingIntoRedux/reduxFirstProject/src/store/index.js"],"sourcesContent":["// const redux = require(\"redux\");\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n// import { createStore } from \"redux\"; //to do this we use to either change our file name to .mjs\r\n//or we can add type:\"module\" in package.json() like this--\r\n// {\r\n//     \"name\": \"redux-app\",\r\n//     \"version\": \"1.0.0\",\r\n//     \"main\": \"index.js\",\r\n//     \"type\": \"module\"\r\n//   }\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state, action) {\r\n      // return {\r\n      //   counter: state.counter + action.payload,\r\n      //   showCounter: state.showCounter,\r\n      // };\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    decrement(state, action) {\r\n      // return {\r\n      //   counter: state.counter + action.payload,\r\n      //   showCounter: state.showCounter,\r\n      // };\r\n      state.counter = state.counter - action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      // return {\r\n      //   counter: state.showCounter,\r\n      //   showCounter: !state.showCounter,\r\n      // };\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\ncreateSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    \r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"toggleShowCounter\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showCounter: !state.showCounter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n// const store = createStore(counterReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA;MACA;MACAD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA;MACA;MACAD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAChD,CAAC;IACDE,aAAaA,CAACJ,KAAK,EAAE;MACnB;MACA;MACA;MACA;MACAA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAM,CAAC;AAEnDf,WAAW,CAAC;EACVK,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEQ,gBAAgB;EAC9BP,QAAQ,EAAE;IACRS,KAAKA,CAACP,KAAK,EAAE;MACXA,KAAK,CAACM,eAAe,GAAG,IAAI;IAC9B;EAEF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAE;IAAEhB,OAAO,EAAEE,YAAY,CAACc;EAAQ;AAC3C,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAAO;AAElD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}