{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducer: {\n    increment(state, action) {\n      // return {\n      //   counter: state.counter + action.payload,\n      //   showCounter: state.showCounter,\n      // };\n      state.counter = state.counter + action.payload;\n    },\n    decrement(state, action) {\n      // return {\n      //   counter: state.counter + action.payload,\n      //   showCounter: state.showCounter,\n      // };\n      state.counter = state.counter - action.payload;\n    },\n    toggleCounter(state) {\n      // return {\n      //   counter: state.showCounter,\n      //   showCounter: !state.showCounter,\n      // };\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducer","increment","state","action","payload","decrement","toggleCounter","counterActions","actions"],"sources":["C:/Users/AKSHAY/OneDrive/Desktop/react_folder/react/19_DivingIntoRedux/reduxFirstProject/src/store/counter-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducer: {\r\n    increment(state, action) {\r\n      // return {\r\n      //   counter: state.counter + action.payload,\r\n      //   showCounter: state.showCounter,\r\n      // };\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    decrement(state, action) {\r\n      // return {\r\n      //   counter: state.counter + action.payload,\r\n      //   showCounter: state.showCounter,\r\n      // };\r\n      state.counter = state.counter - action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      // return {\r\n      //   counter: state.showCounter,\r\n      //   showCounter: !state.showCounter,\r\n      // };\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,OAAO,EAAE;IACPC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA;MACA;MACAD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA;MACA;MACAD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAChD,CAAC;IACDE,aAAaA,CAACJ,KAAK,EAAE;MACnB;MACA;MACA;MACA;MACAA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,cAAc,GAAGV,YAAY,CAACW,OAAO;AAElD,eAAeX,YAAY,CAACG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}