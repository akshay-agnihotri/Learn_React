{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKSHAY\\\\OneDrive\\\\Desktop\\\\react_folder\\\\react\\\\21_ReactRouter\\\\advRouter\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Await, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"could not fetch events\" }), {\n    //   status: 500,\n    // });\n    new Response(JSON.stringify({\n      message: 'Could not fetch events.'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nexport async function eventsLoader() {\n  return {\n    events: loadEvents()\n  };\n}\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => {\n          return /*#__PURE__*/_jsxDEV(EventsList, {\n            events: loadedEvents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","json","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","loadEvents","response","fetch","ok","Response","JSON","stringify","message","status","resData","events","eventsLoader","EventsPage","_s","data","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","$RefreshReg$"],"sources":["C:/Users/AKSHAY/OneDrive/Desktop/react_folder/react/21_ReactRouter/advRouter/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { Await,  json, useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst loadEvents = async () => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"could not fetch events\" }), {\r\n    //   status: 500,\r\n    // });\r\n    new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n      status: 500,\r\n    })\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n};\r\n\r\nexport async function eventsLoader() {\r\n  return {\r\n    events: loadEvents(),\r\n  };\r\n}\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  const events = data.events;\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<p style={{ textAlign: \"center\" }}>loading....</p>}>\r\n        <Await resolve={events}>\r\n          {(loadedEvents) => {\r\n            return <EventsList events={loadedEvents} />;\r\n          }}\r\n        </Await>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAGC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACnEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACT,IAAI,CAAC,CAAC;IACrC,OAAOiB,OAAO,CAACC,MAAM;EACvB;AACF,CAAC;AAED,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACnC,OAAO;IACLD,MAAM,EAAEV,UAAU,CAAC;EACrB,CAAC;AACH;AAEA,SAASY,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGrB,aAAa,CAAC,CAAC;EAC5B,MAAMiB,MAAM,GAAGI,IAAI,CAACJ,MAAM;EAE1B,oBACEb,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACF,QAAQ;MAACqB,QAAQ,eAAEnB,OAAA;QAAGoB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAH,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAP,QAAA,eACrElB,OAAA,CAACN,KAAK;QAACgC,OAAO,EAAEb,MAAO;QAAAK,QAAA,EACnBS,YAAY,IAAK;UACjB,oBAAO3B,OAAA,CAACH,UAAU;YAACgB,MAAM,EAAEc;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACX,CAAC;AAEP;AAACT,EAAA,CAfQD,UAAU;EAAA,QACJnB,aAAa;AAAA;AAAAgC,EAAA,GADnBb,UAAU;AAiBnB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}