{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKSHAY\\\\OneDrive\\\\Desktop\\\\react_folder\\\\react\\\\21_ReactRouter\\\\advRouter\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"could not fetch events\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData;\n    return response;\n  }\n};\nexport const eventsLoader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        st: true,\n        children: \"loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => {\n          /*#__PURE__*/_jsxDEV(EventsList, {\n            events: loadedEvents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","json","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","loadEvents","response","fetch","ok","message","status","eventsLoader","events","EventsPage","_s","data","children","fallback","st","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","$RefreshReg$"],"sources":["C:/Users/AKSHAY/OneDrive/Desktop/react_folder/react/21_ReactRouter/advRouter/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { Await, defer, json, useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst loadEvents = async () => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"could not fetch events\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json({ message: \"could not fetch events\" }, { status: 500 });\r\n  } else {\r\n    // const resData = await response.json();\r\n    // return resData;\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const eventsLoader = () => {\r\n  return defer({\r\n    events: loadEvents(),\r\n  });\r\n};\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  const events = data.events;\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<p st>loading....</p>}>\r\n        <Await resolve={events}>\r\n          {(loadedEvents) => {\r\n            <EventsList events={loadedEvents} />;\r\n          }}\r\n        </Await>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMX,IAAI,CAAC;MAAEY,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE,CAAC,MAAM;IACL;IACA;IACA,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOf,KAAK,CAAC;IACXgB,MAAM,EAAEP,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ,CAAC;AAED,SAASQ,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGjB,aAAa,CAAC,CAAC;EAC5B,MAAMc,MAAM,GAAGG,IAAI,CAACH,MAAM;EAE1B,oBACEV,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAACF,QAAQ;MAACiB,QAAQ,eAAEf,OAAA;QAAGgB,EAAE;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAN,QAAA,eACxCd,OAAA,CAACP,KAAK;QAAC4B,OAAO,EAAEX,MAAO;QAAAI,QAAA,EACnBQ,YAAY,IAAK;UACjB,aAAAtB,OAAA,CAACH,UAAU;YAACa,MAAM,EAAEY;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACX,CAAC;AAEP;AAACR,EAAA,CAfQD,UAAU;EAAA,QACJf,aAAa;AAAA;AAAA2B,EAAA,GADnBZ,UAAU;AAiBnB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}