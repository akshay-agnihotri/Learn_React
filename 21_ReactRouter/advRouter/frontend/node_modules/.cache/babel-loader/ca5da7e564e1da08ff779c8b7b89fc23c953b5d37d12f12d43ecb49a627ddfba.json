{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKSHAY\\\\OneDrive\\\\Desktop\\\\react_folder\\\\react\\\\21_ReactRouter\\\\advRouter\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const newEventAction = async ({\n  request,\n  params\n}) => {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    name: data.get(\"name\"),\n    description: data.get(\"description\"),\n    date: data.get(\"date\")\n  };\n  console.log(eventData);\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw new json({\n      message: \"could not save data\"\n    }, {\n      status: 500\n    });\n  }\n  return;\n};\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","jsxDEV","_jsxDEV","Fragment","_Fragment","newEventAction","request","params","data","formData","eventData","title","get","name","description","date","console","log","response","fetch","method","headers","body","JSON","stringify","ok","message","status","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AKSHAY/OneDrive/Desktop/react_folder/react/21_ReactRouter/advRouter/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from \"react\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport { json } from \"react-router-dom\";\r\n\r\nexport const newEventAction = async ({ request, params }) => {\r\n  const data = await request.formData();\r\n\r\n  const eventData = {\r\n    title: data.get(\"title\"),\r\n    name: data.get(\"name\"),\r\n    description: data.get(\"description\"),\r\n    date: data.get(\"date\"),\r\n  };\r\n\r\n  console.log(eventData);\r\n  \r\n\r\n  const response = await fetch(\"http://localhost:8080/events\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new json({ message: \"could not save data\" }, { status: 500 });\r\n  }\r\n\r\n  return \r\n};\r\n\r\nfunction NewEventPage() {\r\n  return (\r\n    <>\r\n      <EventForm />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewEventPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC3D,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,IAAI,EAAEL,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBE,WAAW,EAAEN,IAAI,CAACI,GAAG,CAAC,aAAa,CAAC;IACpCG,IAAI,EAAEP,IAAI,CAACI,GAAG,CAAC,MAAM;EACvB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;EAGtB,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIzB,IAAI,CAAC;MAAE0B,OAAO,EAAE;IAAsB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EAEA;AACF,CAAC;AAED,SAASC,YAAYA,CAAA,EAAG;EACtB,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACE3B,OAAA,CAACH,SAAS;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACb,CAAC;AAEP;AAACC,EAAA,GANQN,YAAY;AAQrB,eAAeA,YAAY;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}