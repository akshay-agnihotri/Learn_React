{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  amount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.itemId === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          quantity: 1,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n      state.totalQuantity++;\n    },\n    removeItemToCart(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.itemId === itemId);\n      state.totalQuantity--;\n      existingItem.totalPrice -= existingItem.price;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.itemId !== itemId);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\nconst sendCartData = cart => {\n  return dispatch => {\n    // if (isInitial) {\n    //   isInitial = false;\n    //   return;\n    // }\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"sending..\",\n        message: \"sending cart data..\"\n      }));\n      try {\n        const response = await fetch(\"https://advancedredux-7db44-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\", {\n          method: \"PUT\",\n          body: JSON.stringify(cart)\n        });\n        if (!response.ok) {\n          throw new Error(\"sending data failed\");\n        }\n        dispatch(uiActions.showNotification({\n          status: \"success\",\n          title: \"Success..\",\n          message: \"sends data successfully\"\n        }));\n      } catch (error) {\n        dispatch(uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"sending Cart data failed\"\n        }));\n      }\n    };\n    sendCartData();\n  };\n};","map":{"version":3,"names":["createSlice","uiActions","initialState","items","totalQuantity","amount","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","itemId","id","push","price","totalPrice","quantity","title","removeItemToCart","filter","cartActions","actions","reducer","sendCartData","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","error"],"sources":["C:/Users/AKSHAY/OneDrive/Desktop/react_folder/react/20_AdvancedRedux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst initialState = { items: [], totalQuantity: 0, amount: 0 };\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(\r\n        (item) => item.itemId === newItem.id\r\n      );\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          totalPrice: newItem.price,\r\n          quantity: 1,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\r\n      }\r\n      state.totalQuantity++;\r\n    },\r\n    removeItemToCart(state, action) {\r\n      const itemId = action.payload;\r\n      const existingItem = state.items.find((item) => item.itemId === itemId);\r\n      state.totalQuantity--;\r\n      existingItem.totalPrice -= existingItem.price;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.itemId !== itemId);\r\n      } else {\r\n        existingItem.quantity--;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n\r\nconst sendCartData = (cart) => {\r\n  return (dispatch) => {\r\n    // if (isInitial) {\r\n    //   isInitial = false;\r\n    //   return;\r\n    // }\r\n    const sendCartData = async () => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"sending..\",\r\n          message: \"sending cart data..\",\r\n        })\r\n      );\r\n      try {\r\n        const response = await fetch(\r\n          \"https://advancedredux-7db44-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\r\n          { method: \"PUT\", body: JSON.stringify(cart) }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"sending data failed\");\r\n        }\r\n\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"success\",\r\n            title: \"Success..\",\r\n            message: \"sends data successfully\",\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"error\",\r\n            title: \"Error\",\r\n            message: \"sending Cart data failed\",\r\n          })\r\n        );\r\n      }\r\n    };\r\n    sendCartData();\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}